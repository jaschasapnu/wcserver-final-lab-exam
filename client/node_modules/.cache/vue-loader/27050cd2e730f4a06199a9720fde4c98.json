{"remainingRequest":"C:\\Users\\sapnu pc\\Downloads\\webapp_project\\client\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\sapnu pc\\Downloads\\webapp_project\\client\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\sapnu pc\\Downloads\\webapp_project\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\sapnu pc\\Downloads\\webapp_project\\client\\src\\views\\Events.vue?vue&type=template&id=5901bf53&scoped=true&","dependencies":[{"path":"C:\\Users\\sapnu pc\\Downloads\\webapp_project\\client\\src\\views\\Events.vue","mtime":1585366401801},{"path":"C:\\Users\\sapnu pc\\Downloads\\webapp_project\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\sapnu pc\\Downloads\\webapp_project\\client\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\sapnu pc\\Downloads\\webapp_project\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\sapnu pc\\Downloads\\webapp_project\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}