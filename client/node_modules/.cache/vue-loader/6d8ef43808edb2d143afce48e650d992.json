{"remainingRequest":"C:\\Users\\sapnu pc\\Downloads\\webapp_project\\client\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\sapnu pc\\Downloads\\webapp_project\\client\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\sapnu pc\\Downloads\\webapp_project\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\sapnu pc\\Downloads\\webapp_project\\client\\src\\components\\Footer.vue?vue&type=template&id=40ab164b&","dependencies":[{"path":"C:\\Users\\sapnu pc\\Downloads\\webapp_project\\client\\src\\components\\Footer.vue","mtime":1585364041689},{"path":"C:\\Users\\sapnu pc\\Downloads\\webapp_project\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\sapnu pc\\Downloads\\webapp_project\\client\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\sapnu pc\\Downloads\\webapp_project\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\sapnu pc\\Downloads\\webapp_project\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKCJmb290ZXIiLCB7IHN0YXRpY0NsYXNzOiAic2l0ZS1mb290ZXIiIH0sIFsKICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY29udGFpbmVyIiB9LCBbCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAicm93IiB9LCBbCiAgICAgICAgX3ZtLl9tKDApLAogICAgICAgIF92bS5fbSgxKSwKICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbC14cy02IGNvbC1tZC0yIG1sLWF1dG8iIH0sIFsKICAgICAgICAgIF9jKCJoNiIsIFtfdm0uX3YoIk5hdmlnYXRlIildKSwKICAgICAgICAgIF9jKCJ1bCIsIHsgc3RhdGljQ2xhc3M6ICJmb290ZXItbGlua3MiIH0sIFsKICAgICAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgImEiLAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAicm91dGVyLWxpbmsiLAogICAgICAgICAgICAgICAgICAgIHsgc3RhdGljU3R5bGU6IHsgY29sb3I6ICJ3aGl0ZSIgfSwgYXR0cnM6IHsgdG86ICIvIiB9IH0sCiAgICAgICAgICAgICAgICAgICAgW192bS5fdigiSG9tZSIpXQogICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICkKICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF9jKCJsaSIsIFsKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJhIiwKICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgInJvdXRlci1saW5rIiwKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNTdHlsZTogeyBjb2xvcjogIndoaXRlIiB9LAogICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgdG86ICIvbWVtYmVycyIgfQogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgW192bS5fdigiTWVtYmVycyIpXQogICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICkKICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF9jKCJsaSIsIFsKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJhIiwKICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgInJvdXRlci1saW5rIiwKICAgICAgICAgICAgICAgICAgICB7IHN0YXRpY1N0eWxlOiB7IGNvbG9yOiAid2hpdGUiIH0sIGF0dHJzOiB7IHRvOiAiL25ld3MiIH0gfSwKICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KCJOZXdzIildCiAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgKQogICAgICAgICAgICBdKSwKICAgICAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgImEiLAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAicm91dGVyLWxpbmsiLAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY1N0eWxlOiB7IGNvbG9yOiAid2hpdGUiIH0sCiAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyB0bzogIi9ldmVudHMiIH0KICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIFtfdm0uX3YoIkV2ZW50cyIpXQogICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICkKICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF9jKCJsaSIsIFsKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJhIiwKICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgInJvdXRlci1saW5rIiwKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNTdHlsZTogeyBjb2xvcjogIndoaXRlIiB9LAogICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgdG86ICIvc2lnbnVwIiB9CiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KCJTaWduIFVwIildCiAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgKQogICAgICAgICAgICBdKSwKICAgICAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgImEiLAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAicm91dGVyLWxpbmsiLAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY1N0eWxlOiB7IGNvbG9yOiAid2hpdGUiIH0sCiAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyB0bzogIi9sb2dpbiIgfQogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgW192bS5fdigiTG9nIEluIildCiAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgKQogICAgICAgICAgICBdKQogICAgICAgICAgXSkKICAgICAgICBdKQogICAgICBdKQogICAgXSksCiAgICBfYygiaHIiKSwKICAgIF92bS5fbSgyKQogIF0pCn0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFsKICBmdW5jdGlvbigpIHsKICAgIHZhciBfdm0gPSB0aGlzCiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQKICAgIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogICAgcmV0dXJuIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY29sLXNtLTEyIGNvbC1tZC02IiB9LCBbCiAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgc3RhdGljU3R5bGU6IHsgaGVpZ2h0OiAiNjBweCIgfSwKICAgICAgICBhdHRyczogeyBzcmM6IHJlcXVpcmUoIi4uL2Fzc2V0cy9uYmEucG5nIikgfQogICAgICB9KSwKICAgICAgX2MoInAiLCB7IHN0YXRpY0NsYXNzOiAidGV4dC1qdXN0aWZ5IiB9LCBbCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIlRoZSBOYXRpb25hbCBCYXNrZXRiYWxsIEFzc29jaWF0aW9uIChOQkEpIGlzIGEgbWVuJ3MgcHJvZmVzc2lvbmFsIGJhc2tldGJhbGwgbGVhZ3VlIGluIE5vcnRoIEFtZXJpY2EsIGNvbXBvc2VkIG9mIDMwIHRlYW1zICgyOSBpbiB0aGUgVW5pdGVkIFN0YXRlcyBhbmQgMSBpbiBDYW5hZGEpLiBJdCBpcyBvbmUgb2YgdGhlIGZvdXIgbWFqb3IgcHJvZmVzc2lvbmFsIHNwb3J0cyBsZWFndWVzIGluIHRoZSBVbml0ZWQgU3RhdGVzIGFuZCBDYW5hZGEsIGFuZCBpcyB3aWRlbHkgY29uc2lkZXJlZCB0byBiZSB0aGUgcHJlbWllciBtZW4ncyBwcm9mZXNzaW9uYWwgYmFza2V0YmFsbCBsZWFndWUgaW4gdGhlIHdvcmxkLiIKICAgICAgICApCiAgICAgIF0pCiAgICBdKQogIH0sCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbC14cy02IGNvbC1tZC0yIG1sLWF1dG8iIH0sIFsKICAgICAgX2MoImg2IiwgW192bS5fdigiTkJBLmNvbSIpXSksCiAgICAgIF9jKCJ1bCIsIHsgc3RhdGljQ2xhc3M6ICJmb290ZXItbGlua3MiIH0sIFsKICAgICAgICBfYygibGkiLCBbCiAgICAgICAgICBfYygiYSIsIHsgYXR0cnM6IHsgaHJlZjogImh0dHBzOi8vd3d3Lm5iYS5jb20vc2NvcmVzIiB9IH0sIFsKICAgICAgICAgICAgX3ZtLl92KCJTY29yZXMiKQogICAgICAgICAgXSkKICAgICAgICBdKSwKICAgICAgICBfYygibGkiLCBbCiAgICAgICAgICBfYygiYSIsIHsgYXR0cnM6IHsgaHJlZjogImh0dHBzOi8vc3RhdHMubmJhLmNvbS9zY2hlZHVsZS8iIH0gfSwgWwogICAgICAgICAgICBfdm0uX3YoIlNjaGVkdWxlIikKICAgICAgICAgIF0pCiAgICAgICAgXSksCiAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgX2MoImEiLCB7IGF0dHJzOiB7IGhyZWY6ICJodHRwczovL3N0YXRzLm5iYS5jb20vIiB9IH0sIFsKICAgICAgICAgICAgX3ZtLl92KCJTdGF0cyIpCiAgICAgICAgICBdKQogICAgICAgIF0pLAogICAgICAgIF9jKCJsaSIsIFsKICAgICAgICAgIF9jKCJhIiwgeyBhdHRyczogeyBocmVmOiAiaHR0cHM6Ly93d3cubmJhLmNvbS9zdGFuZGluZ3MiIH0gfSwgWwogICAgICAgICAgICBfdm0uX3YoIlN0YW5kaW5ncyIpCiAgICAgICAgICBdKQogICAgICAgIF0pLAogICAgICAgIF9jKCJsaSIsIFsKICAgICAgICAgIF9jKCJhIiwgeyBhdHRyczogeyBocmVmOiAiaHR0cHM6Ly93d3cubmJhLmNvbS9wbGF5ZXJzIiB9IH0sIFsKICAgICAgICAgICAgX3ZtLl92KCJQbGF5ZXJzIikKICAgICAgICAgIF0pCiAgICAgICAgXSksCiAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgX2MoImEiLCB7IGF0dHJzOiB7IGhyZWY6ICJodHRwczovL3d3dy5uYmEuY29tL3RlYW1zIiB9IH0sIFsKICAgICAgICAgICAgX3ZtLl92KCJUZWFtcyIpCiAgICAgICAgICBdKQogICAgICAgIF0pCiAgICAgIF0pCiAgICBdKQogIH0sCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbnRhaW5lciIgfSwgWwogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvcHlyaWdodCB0ZXh0LWNlbnRlciIgfSwgWwogICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICBzdGF0aWNDbGFzczogIm1iLTMiLAogICAgICAgICAgc3RhdGljU3R5bGU6IHsgaGVpZ2h0OiAiODBweCIgfSwKICAgICAgICAgIGF0dHJzOiB7IHNyYzogcmVxdWlyZSgiLi4vYXNzZXRzL25iYS1sb2dvLnBuZyIpIH0KICAgICAgICB9KSwKICAgICAgICBfYygicCIsIHsgc3RhdGljQ2xhc3M6ICJjb3B5cmlnaHQtdGV4dCIgfSwgWwogICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAiQ29weXJpZ2h0IMKpIDIwMjAgTkJBIE1lZGlhIFZlbnR1cmVzLCBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuIgogICAgICAgICAgKQogICAgICAgIF0pLAogICAgICAgIF9jKCJwIiwgeyBzdGF0aWNDbGFzczogImNvcHlyaWdodC10ZXh0IiB9LCBbCiAgICAgICAgICBfYygiYSIsIHsgYXR0cnM6IHsgaHJlZjogIiMiIH0gfSwgW192bS5fdigiTkJBLmNvbSIpXSksCiAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICIgcGFydCBvZiBUdXJuZXIgU3BvcnRzIERpZ2l0YWwsIHBhcnQgb2YgdGhlIFR1cm5lciBTcG9ydHMgJiBFbnRlcnRhaW5tZW50IERpZ2l0YWwgTmV0d29yay4iCiAgICAgICAgICApCiAgICAgICAgXSkKICAgICAgXSkKICAgIF0pCiAgfQpdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}